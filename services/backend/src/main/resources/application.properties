spring.application.name=game-recommender-ai

# Server configuration
server.port=8080

# gRPC Configuration
grpc.ai-service.host=${GRPC_AI_SERVICE_HOST:localhost}
grpc.ai-service.port=${GRPC_AI_SERVICE_PORT:9090}

# gRPC Client Configuration (Spring Boot Starters)
grpc.client.ai-service.address=${grpc.ai-service.host}:${grpc.ai-service.port}
grpc.client.ai-service.negotiationType=plaintext
grpc.client.ai-service.maxInboundMessageSize=1048576

# Swagger/OpenAPI Configuration
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true
springdoc.swagger-ui.disable-swagger-default-url=true

# Spring Boot Actuator Configuration
management.endpoints.web.base-path=/actuator
management.endpoints.web.exposure.include=health,info,metrics,prometheus,env,configprops
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.info.env.enabled=true
management.info.git.enabled=true

# Custom health indicators
management.health.defaults.enabled=true
management.health.diskspace.enabled=true
management.health.db.enabled=true

# Metrics configuration
management.simple.metrics.export.enabled=true
management.metrics.tags.application=${spring.application.name}

# Prometheus configuration
management.prometheus.metrics.export.enabled=true

# Logging
logging.level.ru.perevalov.gamerecommenderai=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.io.grpc=DEBUG

logging.level.io.grpc.internal.ManagedChannelImplBuilder=ERROR
logging.level.io.grpc.internal=ERROR
logging.level.io.grpc.ManagedChannelRegistry=ERROR
logging.level.io.grpc.netty.shaded.io.grpc.netty.Utils=WARN

# Убирает сообщение про ContextStorageOverride
logging.level.io.grpc.Context=ERROR

# Урезаем подробный DEBUG от netty (shaded)
logging.level.io.grpc.netty.shaded.io.grpc.netty=INFO

# Resilience4j Configuration
resilience4j.circuitbreaker.instances.grpcClient.sliding-window-size=10
resilience4j.circuitbreaker.instances.grpcClient.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.grpcClient.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.grpcClient.wait-duration-in-open-state=30s
resilience4j.circuitbreaker.instances.grpcClient.failure-rate-threshold=50

resilience4j.retry.instances.grpcClient.max-attempts=3
resilience4j.retry.instances.grpcClient.wait-duration=1s
resilience4j.retry.instances.grpcClient.retry-exceptions=java.io.IOException,java.util.concurrent.TimeoutException

resilience4j.timelimiter.instances.grpcClient.timeout-duration=10s

# App gRPC Settings
app.grpc.recommendation.count=5
app.grpc.resilience.instance-name=grpcClient

# App gRPC error codes and messages
app.grpc.errors.communication.code=GRPC_COMMUNICATION_ERROR
app.grpc.errors.ai.code=GRPC_AI_ERROR
app.grpc.messages.comm-error-prefix=Ошибка при обращении к AI сервису: 
app.grpc.messages.ai-error-prefix=Ошибка от AI сервиса: 
app.grpc.messages.fallback.recommendations=Сервис временно недоступен. Попробуйте позже.
app.grpc.messages.fallback.chat=AI сервис временно недоступен. Попробуйте позже.

# Caching Configuration
spring.cache.type=caffeine
spring.cache.cache-names=gameRecommendations,userPreferences,steamData
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=1h,expireAfterAccess=30m

# App Cache Configuration
# Names for Caffeine caches (list)
app.cache.caffeine.names=gameRecommendations,userPreferences
# Default TTL for Redis caches (ISO-8601 Duration)
app.cache.redis.default-ttl=PT1H
# TTL for specific Steam cache (ISO-8601 Duration)
app.cache.redis.steam-ttl=PT30M

# Redis Configuration
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}
spring.data.redis.database=0
spring.data.redis.timeout=5s
spring.data.redis.lettuce.pool.max-active=20
spring.data.redis.lettuce.pool.max-idle=10
spring.data.redis.lettuce.pool.min-idle=5
spring.data.redis.lettuce.pool.max-wait=5s

# Rate Limiting Configuration
app.rate-limit.steam-api.max-requests-per-second=10
app.rate-limit.steam-api.max-requests-per-minute=100
app.rate-limit.steam-api.max-requests-per-hour=1000
app.rate-limit.concurrent-users.max=100

# Steam API Configuration
app.steam.api.base-url=https://store.steampowered.com/api
app.steam.api.timeout=5s
app.steam.api.retry-attempts=3
app.steam.api.retry-delay=1s
