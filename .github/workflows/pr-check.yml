name: Backend PR Check

on:
  pull_request:
    branches: [ master, develop ]
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  java-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./services/backend
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build & test (verify)
        run: mvn -B -ntp clean verify

      - name: Run code quality checks
        run: mvn checkstyle:check

      - name: Check for vulnerabilities
        run: mvn org.owasp:dependency-check-maven:check

      - name: Upload surefire reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: java-test-reports
          path: "**/target/surefire-reports/*"

  python-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./services/ai-service
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'poetry'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies (incl. dev)
        run: poetry install --no-interaction --with dev

      - name: Run tests
        run: poetry run pytest -v --junitxml=pytest-report.xml

      - name: Upload pytest report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: python-test-report
          path: pytest-report.xml

      - name: Lint (flake8)
        run: poetry run flake8 app --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Type check (mypy)
        run: poetry run mypy app --ignore-missing-imports

      - name: Security check (safety)
        run: poetry run safety check

  docker-build:
    runs-on: ubuntu-latest
    needs: [java-build, python-build]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build AI Service Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./services/ai-service
          file: ./services/ai-service/Dockerfile
          push: false
          tags: ai-service:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./services/backend
          file: ./services/backend/Dockerfile
          push: false
          tags: backend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max